Running Tests:

The library and tests require ruby 1.9 or higher. Run the tests as:

ruby1.9.1 tests/test_filemanager.rb

Bencoding: ruby gem bencode


TODO
  - Shutdown takes a long time
  - Implement endgame strategy
  - Update peer download rate when they download msgs
  - Currently when we request blocks we request a fixed amount from the first peer returned from the findRequestableBlocks
    call. We should spread the requests out to other peers as well if we have saturated the first peer's connection.
    We could tell by the peer's upload rate: upload_rate/(block_size/request_blocks_period) is the ratio of peer's measured
    upload versus our expected upload based on our requests. If this ratio is 1 we are requesting at the rate that the 
    peer can upload to us. If it is < 0 we are requesting faster than the peer can provide. We can keep increasing the
    amount we request from the peer as long as the ratio stays at almost 1. If it drops below a threshold then we should scale
    back our requesting.

      upload_rate/(block_size/request_blocks_period)

  - Limit peers to the target peer count
  - Currently we accept connections from peers even when we are checking the piece hash. Is this a problem?
    - No. Modified code to allow bitmap and have messages to proceed from peers, so we should have a complete picture.
    
 

TESTING:

  - Test peerclient downloading a piece with an invalid hash.


--------------

Test 1:

kanobe@andor:~/src/rubytorrentlib$ ruby1.9.1 src/peerclient.rb /tmp/newtorrent/DW\ Statcards\ Pages.zip.torrent
kanobe@andor:~/src/rubytorrentlib$ tests/framework/run_testtorrent_tracker.rb
kanobe@andor:~/src/rubytorrentlib$ ruby1.9.1 src/peerclient.rb --basedir tmp/client2/ --port 9997 /tmp/newtorrent/DW\ Statcards\ Pages.zip.torrent

------

Curses download interface:

  - Like rtorrent
  - list torrents being downloaded, and user can select to
    get details screen.
  - Summary per torrent:
    active peer count, total peer count, unckoked/choked/interested/not interested peer counts, rates



